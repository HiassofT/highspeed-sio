;  Highspeed SIO diagnostics
;

.if .not .def SHIPDIAG

; ------------------------------------------------------------
; begin: my own testing parameters

; disable retries and fallback to standard speed
; (even in non-diag mode)
DIAGNORET = 1
; SCREENOFF = 1

; DIAGSIO = 1

; diag timing (in highspeed code)
; DIAGTIM	= 1

; diag timing (out of highspeed code)
DIAGTX = 1

; diag specific timing problems
; DIAGTP = 1

; initial clock values
CLK1 = $FF
CLK2 = $FF
CLK3 = $FF
; lcount value
LCNT = $40

DRIVENO = 2

TCMD	= 'R
TDIR	= $40

;TCMD	= 'P
;TDIR	= $80

;TBYT	= $80
TBYT	= $100

; end: my own testing parameters
; ------------------------------------------------------------

.else

; default testing parameters, included for testing in dist

DRIVENO = 2

TCMD	= 'R
TDIR	= $40

;TCMD	= 'P
;TDIR	= $80

;TBYT	= $80
TBYT	= $100

.if SHIPDIAG=1
; do timing tests with unmodified SIO code
DIAGNORET = 1
DIAGTX = 1
.endif

.if SHIPDIAG=2
; do timing tests with unmodified SIO code, Antic DMA disabled
DIAGNORET = 1
DIAGTX = 1
SCREENOFF = 1
.endif

.if SHIPDIAG=3
; test with all diags in SIO code
DIAGSIO = 1
DIAGTIM	= 1
.endif

.endif

; patch OS for insane speeds

INSANE	= 1

	.include "cio.inc"
	.include "hisio.inc"

START	= $2000
BUF	= $3000

TMPVEC	= $E0


	* = START-16

;************************************
; ATR file header

	.WORD $0296 ; magic
	.WORD (END-START+15)/16
	.WORD 128
	.WORD 0,0,0,0,0


;************************************
; boot header complete file

	.BYTE 0
	.BYTE (END-START+127)/128
	.WORD START
	.WORD XRTS
       
	LDA #0
	STA 580
	LDA #2
	STA 9
	LDA #<RUN
	STA 2
	LDA #>RUN
	STA 3


RUN	LDA #0
	STA $301
	JSR HISIO ; clear speed table

.if .def INSANE
	JSR ROMRAM
	LDA #0
	STA $D40E

.if 0
	LDA #<FASTVBI
	STA $222
	LDA #>FASTVBI
	STA $223
.else

	LDA #<FASTNMI
	STA $FFFA
	LDA #>FASTNMI
	STA $FFFB
.endif

	LDA #$40
	STA $D40E
.endif


; set SIO parameters for D2:

	LDA #$31
	STA $300
	LDA #DRIVENO
	STA $301
	LDA #7
	STA $306

; read sectors 4-720 in a loop forever

DOTEST
; print menu screen
; drive number
	LDA #DRIVENO+$30
	STA MDRIV
;density
.if TBYT = $80
	LDA #'S
.else
	LDA #'D
.endif
	STA MDENS

	BPUT 0, MLEN, MTXT

	JSR GETKEY	; wait for a keypress first
	CMP #27
	BNE NOBOOT
	JMP $E477

NOBOOT	LDA #TCMD
	STA $302
	LDA #<TBYT
	STA DBYTLO
	LDA #>TBYT
	STA DBYTHI

	LDA #<BUF
	STA DBUFLO
	LDA #>BUF
	STA DBUFHI

.if .def SCREENOFF
	LDA #0
	STA 559
	STA $D400
.endif

TLOOP0	
	LDA #4
	STA DAUX1
	LDA #0
	STA DAUX2

TLOOP	LDA 53279
	CMP #6
	BEQ TLOOP

	LDA #TDIR
	STA $303

;	JSR $E459

.if .def DIAGTP
	LDA #0
	STA $D40E

	LDA #CLK3
	STA 20
	LDA #CLK2
	STA 19
	LDA #CLK1
	STA 18

; now wait for the right screen line
?WTLC	LDA $D40B
	CMP #LCNT
	BNE ?WTLC

	LDA #$40
	STA $D40E
.endif

.if .def DIAGTX
; record current timestamp
        LDA #0
        STA $D40E
        LDA 18
        STA TSTAMP
        LDA 19
        STA TSTAMP+1
        LDA 20
        STA TSTAMP+2
        LDA $D40B
        STA TSTAMP+3
        LDA #$40
        STA $D40E
.endif

	JSR HISIO

.if .def DIAGSIO
	JSR PDIAG
.endif
	LDA $303
	BMI TEND

	INC DAUX1
	BNE TLOOP1
	INC DAUX2
TLOOP1	LDA DAUX2
	CMP #2
	BNE TLOOP
	LDA DAUX1
	CMP #$D1
	BNE TLOOP
	BEQ TLOOP0

TEND	LDA #$22
	STA 559

.if .def DIAGTX
	LDA TSTAMP
	JSR PHEX
	LDA TSTAMP+1
	JSR PHEX
	LDA TSTAMP+2
	JSR PHEX
	LDA #'.
	JSR PUTCHR
	LDA TSTAMP+3
	JSR PHEX
	LDA #':
	JSR PUTCHR
	LDA #32
	JSR PUTCHR
	LDA $303
	JSR PHEX
	LDA #155
	JSR PUTCHR
.endif

TEND2	JSR GETKEY
	JMP RUN

XRTS	RTS

.if .def DIAGTX
PHEX	PHA
        LSR
        LSR
        LSR
        LSR
        TAX
        LDA HEXTAB,X
        JSR PUTCHR
        PLA
        AND #$0F
        TAX
        LDA HEXTAB,X

PUTCHR	TAY
        LDA $E407
        PHA
        LDA $E406
        PHA
        TYA
        RTS

HEXTAB .BYTE "0123456789ABCDEF"

TSTAMP	.DC 4 0
.endif

.if .def INSANE
	.include "romram.src"
	.include "fastnmi.src"
.endif

	.include "hisiodet.src"
	.include "hisiocode.src"

HIBUF   .DC 4 0
SIOSPEED        .BYTE 0
SPEEDTB .DC 8 0

GETKEY  LDA $E425
	PHA
	LDA $E424
	PHA
	RTS

MTXT	.BYTE 125
	.BYTE "highspeed SIO test 2009-02-12",155
.if .def SHIPDIAG
.if SHIPDIAG = 1
	.BYTE "basic test mode",155
.endif
.if SHIPDIAG = 2
	.BYTE "basic test mode, ANTIC DMA off",155
.endif
.if SHIPDIAG = 3
	.BYTE "extended test mode",155
.endif
.else
	.BYTE "custom debug mode",155
.endif
	.BYTE 155,"insert "
MDENS	.BYTE "SD disk into D"
MDRIV	.BYTE "0: and",155
	.BYTE "press any key, ESC=reboot",155,155

MLEN	= * - MTXT

	.IF (*&127)<>0
	.DC (128-(*&127)) 0
	.ENDIF

END	= *
